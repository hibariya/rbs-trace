# Generated from lib/rbs/trace/file.rb with RBS::Inline

module RBS
  class Trace
    class File
      include Helpers

      # @rbs (String, ?Hash[TypeName, AST::Declarations::t]) -> void
      def initialize: (String, ?Hash[TypeName, AST::Declarations::t]) -> void

      # @rbs (untyped, Class, Symbol) -> AST::Members::MethodDefinition?
      def find_or_new_method_definition: (untyped, Class, Symbol) -> AST::Members::MethodDefinition?

      # @rbs (?Symbol?) -> String
      def with_rbs: (?Symbol?) -> String

      # @rbs (?Symbol?) -> void
      def rewrite: (?Symbol?) -> void

      # @rbs () -> String
      def to_rbs: () -> String

      # @rbs (String) -> void
      def save_rbs: (String) -> void

      private

      # @rbs (Array[String], Integer) -> boolish
      def skip_insert?: (Array[String], Integer) -> boolish

      # @rbs (Class | Module) -> (AST::Declarations::Class | AST::Declarations::Module)?
      def find_or_new_receiver_decl: (Class | Module) -> (AST::Declarations::Class | AST::Declarations::Module)?

      # @rbs (String) -> Pathname
      def calc_rbs_path: (String) -> Pathname
    end
  end
end
